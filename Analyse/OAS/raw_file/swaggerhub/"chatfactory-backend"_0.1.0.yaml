components:
  schemas:
    ChatLLMOutput:
      properties:
        context_uuid:
          anyOf:
          - type: string
          - type: 'null'
          description: Id of context from which majority of LLM configs are fetched
          title: Context Uuid
        gpt_prompt:
          description: Prompt contains information about the organization which GPT
            can use to understand the query better.
          title: Gpt Prompt
          type: string
        llm_system_msg:
          default: ''
          description: Default LLM system msg.
          title: Llm System Msg
          type: string
        organization_id:
          description: Id assigned to a particular organization
          title: Organization Id
          type: string
      required:
      - organization_id
      title: ChatLLMOutput
      type: object
    ChatRequest:
      properties:
        active_version:
          anyOf:
          - type: string
          - type: 'null'
          description: ''
          title: Active Version
        allow_open_responses:
          anyOf:
          - type: boolean
          - type: 'null'
          description: To allow open response.
          title: Allow Open Responses
        base_prompt:
          anyOf:
          - type: string
          - type: 'null'
          description: Base prompt contains information about the organization which
            GPT can use to understand the query better.
          title: Base Prompt
        buyer_intent_matching_threshold:
          anyOf:
          - type: number
          - type: 'null'
          description: Threshold to match document using buyer's intent
          title: Buyer Intent Matching Threshold
        chat_history_count:
          anyOf:
          - type: integer
          - type: 'null'
          description: Number of previous documents used to answer a query.
          title: Chat History Count
        columns:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          description: 'Field name required from recommended documents. '
          title: Columns
        context_uuid:
          anyOf:
          - type: string
          - type: 'null'
          description: Id of context from which majority of LLM configs are fetched
          title: Context Uuid
        conversation_id:
          description: Id assigned to each query asked in a particular session
          title: Conversation Id
          type: string
        current_page_view:
          anyOf:
          - type: object
          - type: 'null'
          description: Current page information, in chatfactory context, it will be
            matched document to the current/latest query.
          title: Current Page View
        direct_matching_document_num:
          anyOf:
          - type: integer
          - type: 'null'
          description: Number of top documents used to fetch context to answer a query
          title: Direct Matching Document Num
        direct_matching_threshold:
          anyOf:
          - type: number
          - type: 'null'
          description: ''
          title: Direct Matching Threshold
        document_engagement_threshold:
          anyOf:
          - type: number
          - type: 'null'
          description: Engagement threshold is used to filter out documents from session
            which giving recommendations.
          title: Document Engagement Threshold
        document_matching_threshold:
          anyOf:
          - type: number
          - type: 'null'
          description: Threshold which a document must cross to get matched with a
            query.Range is between 0-1
          title: Document Matching Threshold
        embedding_model:
          anyOf:
          - type: string
          - type: 'null'
          description: Embedding model use to create embedding of query and match
            it with already generated queries.
          title: Embedding Model
        enable_buyer_intent_graph_rag:
          anyOf:
          - type: boolean
          - type: 'null'
          description: enables/disables graph rag
          title: Enable Buyer Intent Graph Rag
        enable_buyer_intent_retrieval:
          anyOf:
          - type: boolean
          - type: 'null'
          description: To enable matching using buyer's intent.
          title: Enable Buyer Intent Retrieval
        enable_chunk_based_retrieval:
          anyOf:
          - type: boolean
          - type: 'null'
          description: To enable chunk based retrival
          title: Enable Chunk Based Retrieval
        gpt_api:
          anyOf:
          - type: string
          - type: 'null'
          description: GPT API, whether we used OpenAI or AZURE. This field not been
            used now. Value is being fetch from llm_config.
          title: Gpt Api
        gpt_azure_model_name:
          anyOf:
          - type: string
          - type: 'null'
          description: Azure GPT model name
          title: Gpt Azure Model Name
        gpt_model_name:
          anyOf:
          - type: string
          - type: 'null'
          description: GPT model name
          title: Gpt Model Name
        gpt_model_temperature:
          anyOf:
          - type: number
          - type: 'null'
          description: Model temprature's. This field not been used now. Value is
            being fetch from llm_config.
          title: Gpt Model Temperature
        gpt_model_token_limit:
          anyOf:
          - type: integer
          - type: 'null'
          description: Token limit of response.This field not been used now. Value
            is being fetch from llm_config.
          title: Gpt Model Token Limit
        gpt_model_token_limit_context:
          anyOf:
          - type: integer
          - type: 'null'
          description: Token limit of context provided to answer the question.This
            field not been used now. Value is being fetch from llm_config.
          title: Gpt Model Token Limit Context
        graph_rag_edge_similarity_thresh:
          anyOf:
          - type: number
          - type: 'null'
          description: threshold for most similar edges
          title: Graph Rag Edge Similarity Thresh
        graph_rag_kp_similarity_thresh:
          anyOf:
          - type: number
          - type: 'null'
          description: threshold for most similar nodes
          title: Graph Rag Kp Similarity Thresh
        graph_rag_max_num_walks:
          anyOf:
          - type: integer
          - type: 'null'
          description: maximum number of walks
          title: Graph Rag Max Num Walks
        graph_rag_num_walks:
          anyOf:
          - type: integer
          - type: 'null'
          description: number of random walks
          title: Graph Rag Num Walks
        graph_rag_top_k:
          anyOf:
          - type: integer
          - type: 'null'
          description: number of documents to be used in prompt as context
          title: Graph Rag Top K
        graph_rag_top_k_kps_similar_edges:
          anyOf:
          - type: integer
          - type: 'null'
          description: number of edges to pick above a threshold
          title: Graph Rag Top K Kps Similar Edges
        graph_rag_top_k_kps_similar_nodes:
          anyOf:
          - type: integer
          - type: 'null'
          description: number of similar nodes to pick above a threshold
          title: Graph Rag Top K Kps Similar Nodes
        graph_rag_walk_length:
          anyOf:
          - type: integer
          - type: 'null'
          description: number of walk length for each walk
          title: Graph Rag Walk Length
        graph_rag_walk_tolerance:
          anyOf:
          - type: number
          - type: 'null'
          description: threshold for content matching
          title: Graph Rag Walk Tolerance
        history_allowed_in_recommendations:
          anyOf:
          - type: integer
          - type: 'null'
          description: Number of document used from history.
          title: History Allowed In Recommendations
        history_decay_rate:
          anyOf:
          - type: number
          - type: 'null'
          description: TO Decay importance of older document to while giving recommendations.
          title: History Decay Rate
        ip2location:
          anyOf:
          - type: object
          - type: 'null'
          description: Location
          title: Ip2Location
        k:
          anyOf:
          - type: integer
          - type: 'null'
          default: 5
          description: Number of recommendation to be fetched
          title: K
        llm_config:
          anyOf:
          - type: object
          - type: 'null'
          description: Contain information related to GPT model like model name,temprature,service
            provider etc.
          title: Llm Config
        llm_follow_up_config:
          anyOf:
          - type: object
          - type: 'null'
          description: LLM config related to follow up questions.
          title: Llm Follow Up Config
        llm_query_rephrase_config:
          anyOf:
          - type: object
          - type: 'null'
          description: LLM config used to rephrase a question.
          title: Llm Query Rephrase Config
        llm_query_version_config:
          anyOf:
          - type: object
          - type: 'null'
          description: LLM config used query versioning.
          title: Llm Query Version Config
        matching_content_pool_id:
          description: Id of the contentpool from which we want answer the asked the
            query
          title: Matching Content Pool Id
          type: string
        matching_document_maximum_score:
          anyOf:
          - type: integer
          - type: 'null'
          description: matching_document_maximum_score
          title: Matching Document Maximum Score
        matching_document_minimum_score:
          anyOf:
          - type: number
          - type: 'null'
          description: matching_document_minimum_score
          title: Matching Document Minimum Score
        matching_document_weight_range:
          anyOf:
          - type: number
          - type: 'null'
          description: matching_document_weight_range
          title: Matching Document Weight Range
        max_response_length:
          anyOf:
          - type: integer
          - type: 'null'
          description: Maximum length of the response,can be used to shorten and increase
            the length of response.
          title: Max Response Length
        multi_document_context_answering_k:
          anyOf:
          - type: integer
          - type: 'null'
          description: multi_document_context_answering_k
          title: Multi Document Context Answering K
        multi_documents_recom_k:
          anyOf:
          - type: integer
          - type: 'null'
          description: multi_documents_recom_k
          title: Multi Documents Recom K
        num_buyer_intent_matched_document:
          anyOf:
          - type: integer
          - type: 'null'
          description: Number of documents used which extracted using buyer's intent
            from query
          title: Num Buyer Intent Matched Document
        num_query_intent_matched_document:
          anyOf:
          - type: integer
          - type: 'null'
          description: Number of documents used which extracted using intent from
            query
          title: Num Query Intent Matched Document
        number_query_versions:
          anyOf:
          - type: integer
          - type: 'null'
          description: ''
          title: Number Query Versions
        open_question_response:
          anyOf:
          - type: string
          - type: 'null'
          description: ''
          title: Open Question Response
        organization_id:
          description: Id assigned to a particular organization
          title: Organization Id
          type: string
        organization_name:
          anyOf:
          - type: string
          - type: 'null'
          description: Name of the organization
          title: Organization Name
        query:
          anyOf:
          - type: string
          - type: 'null'
          description: Question asked my the user
          title: Query
        query_intent_matching_threshold:
          anyOf:
          - type: number
          - type: 'null'
          description: Threshold to match document using buyer's intent
          title: Query Intent Matching Threshold
        query_intent_prompt:
          anyOf:
          - type: string
          - type: 'null'
          description: Prompt used to fetch query intent
          title: Query Intent Prompt
        query_intent_system_message:
          anyOf:
          - type: string
          - type: 'null'
          description: Sytem msg for query intent
          title: Query Intent System Message
        query_mode:
          anyOf:
          - type: string
          - type: 'null'
          description: There are different query modes, it can STRICT, OPEN etc
          title: Query Mode
        query_source:
          anyOf:
          - type: string
          - type: 'null'
          description: ''
          title: Query Source
        recom_content_pool_id:
          description: Id of the contentpool from which we want fetch recommendations
          title: Recom Content Pool Id
          type: string
        recommendation_algo:
          anyOf:
          - type: string
          - type: 'null'
          description: Algorithm used to match recommendation, it can be YML, DIRECT_KNN_ANSWER
          title: Recommendation Algo
        recommendation_mode:
          anyOf:
          - type: string
          - type: 'null'
          description: ''
          title: Recommendation Mode
        recommender_embeddings:
          anyOf:
          - items: {}
            type: array
          - type: 'null'
          description: Which embedding should recommender use to give recommendations.
          title: Recommender Embeddings
        recommender_weights:
          anyOf:
          - type: object
          - type: 'null'
          description: Different YML weights
          title: Recommender Weights
        response_transparency_weights:
          anyOf:
          - type: object
          - type: 'null'
          description: Weights assigned to matched document
          title: Response Transparency Weights
        resume_session:
          anyOf:
          - type: boolean
          - type: 'null'
          description: ''
          title: Resume Session
        session:
          anyOf:
          - type: object
          - type: 'null'
          description: Session information
          title: Session
        session_id:
          description: Session id associated with visitor
          title: Session Id
          type: string
        sixsense:
          anyOf:
          - type: object
          - type: 'null'
          description: Additional meta information of the user (Naics code, siccodes,location
            etc)
          title: Sixsense
        skip_recommendations:
          anyOf:
          - type: boolean
          - type: 'null'
          description: Used to skip recommendation.
          title: Skip Recommendations
        stream:
          anyOf:
          - type: boolean
          - type: 'null'
          default: true
          description: Boolen value set to true to get the response in stream format
          title: Stream
        top_knn_matches:
          anyOf:
          - type: integer
          - type: 'null'
          description: 'Number of documents matched after KNN '
          title: Top Knn Matches
        use_content_for_graph_rag_answer:
          anyOf:
          - type: boolean
          - type: 'null'
          description: allow content raw_text or chunk data to be used as context
            in addition to description context
          title: Use Content For Graph Rag Answer
        visitor_id:
          description: visitor's id
          title: Visitor Id
          type: string
        visitor_org_info:
          anyOf:
          - type: object
          - type: 'null'
          description: Information related to organization from  which user belongs
            to.
          title: Visitor Org Info
        wanted_content_categories:
          anyOf:
          - items: {}
            type: array
          - type: 'null'
          description: Content catogeries used to matched buyer intent
          title: Wanted Content Categories
        webcontext_id:
          anyOf:
          - type: string
          - type: 'null'
          description: ''
          title: Webcontext Id
      required:
      - organization_id
      - recom_content_pool_id
      - matching_content_pool_id
      - conversation_id
      - visitor_id
      - session_id
      title: ChatRequest
      type: object
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          title: Detail
          type: array
      title: HTTPValidationError
      type: object
    MicrositeRequest:
      properties:
        bookmark_count:
          anyOf:
          - type: integer
          - type: 'null'
          description: Used to fix liked_ids if user didnt liked any documents.
          title: Bookmark Count
        content_pool_id:
          description: Id of the contentpool from which we want fetch recommendations
          title: Content Pool Id
          type: string
        context_uuid:
          anyOf:
          - type: string
          - type: 'null'
          description: Id of context from which majority of LLM configs are fetched
          title: Context Uuid
        current_page_view:
          anyOf:
          - type: object
          - type: 'null'
          description: Current page information, in chatfactory context, it will be
            matched document to the current/latest query.
          title: Current Page View
        document_engagement_threshold:
          anyOf:
          - type: number
          - type: 'null'
          description: Engagement threshold is used to filter out documents from session
            which giving recommendations.
          title: Document Engagement Threshold
        ip2location:
          anyOf:
          - type: object
          - type: 'null'
          description: Location
          title: Ip2Location
        k:
          anyOf:
          - type: integer
          - type: 'null'
          default: 5
          description: Number of recommendation to be fetched
          title: K
        liked_ids:
          anyOf:
          - items: {}
            type: array
          - type: 'null'
          description: Document liked by user in a particular session.
          title: Liked Ids
        organization_id:
          description: Id assigned to a particular organization
          title: Organization Id
          type: string
        resume_session:
          anyOf:
          - type: boolean
          - type: 'null'
          description: ''
          title: Resume Session
        session:
          anyOf:
          - type: object
          - type: 'null'
          description: Session information
          title: Session
        session_id:
          description: Session id associated with visitor
          title: Session Id
          type: string
        sixsense:
          anyOf:
          - type: object
          - type: 'null'
          description: Additional meta information of the user (Naics code, siccodes,location
            etc)
          title: Sixsense
        summary_count:
          anyOf:
          - type: integer
          - type: 'null'
          default: 1
          title: Summary Count
        visitor_id:
          description: visitor's id
          title: Visitor Id
          type: string
        visitor_org_info:
          anyOf:
          - type: object
          - type: 'null'
          description: Information related to organization from  which user belongs
            to.
          title: Visitor Org Info
        webcontext_id:
          anyOf:
          - type: string
          - type: 'null'
          description: ''
          title: Webcontext Id
      required:
      - organization_id
      - visitor_id
      - session_id
      - content_pool_id
      - liked_ids
      title: MicrositeRequest
      type: object
    MicrositeResponse:
      properties:
        data:
          title: Data
          type: object
        message:
          title: Message
          type: string
        status:
          title: Status
          type: string
      required:
      - status
      - message
      - data
      title: MicrositeResponse
      type: object
    RegenerationRequest:
      properties:
        context_uuid:
          anyOf:
          - type: string
          - type: 'null'
          description: Id of context from which majority of LLM configs are fetched
          title: Context Uuid
        conversation_id:
          title: Conversation Id
          type: string
        organization_id:
          description: Id assigned to a particular organization
          title: Organization Id
          type: string
        regeneration_type:
          description: Action we want to perform with previous generated response.
            Values can DESCRIBE,REGENRATE etc
          title: Regeneration Type
          type: string
        session_id:
          description: Session id associated with visitor
          title: Session Id
          type: string
        stream:
          anyOf:
          - type: boolean
          - type: 'null'
          default: true
          description: Boolen value set to true to get the response in stream format
          title: Stream
        visitor_id:
          description: visitor's id
          title: Visitor Id
          type: string
      required:
      - organization_id
      - conversation_id
      - visitor_id
      - session_id
      - regeneration_type
      title: RegenerationRequest
      type: object
    TextSearchRequest:
      properties:
        matching_content_pool_id:
          description: Id of the contentpool from which we want answer the asked the
            query
          title: Matching Content Pool Id
          type: string
        num_doc_text_search:
          description: Number of document to match
          title: Num Doc Text Search
          type: integer
        organization_id:
          description: Id assigned to a particular organization
          title: Organization Id
          type: string
        query:
          anyOf:
          - type: string
          - type: 'null'
          description: Question asked my the user
          title: Query
      required:
      - organization_id
      - matching_content_pool_id
      - query
      - num_doc_text_search
      title: TextSearchRequest
      type: object
    TopicListRequest:
      properties:
        content_pool_id:
          description: Id of the contentpool from which we want fetch recommendations
          title: Content Pool Id
          type: string
        context_uuid:
          anyOf:
          - type: string
          - type: 'null'
          description: Id of context from which majority of LLM configs are fetched
          title: Context Uuid
        num_topic_ques:
          default: 20
          description: ''
          title: Num Topic Ques
          type: integer
        num_topics:
          default: 10
          description: Number of topics
          title: Num Topics
          type: integer
        organization_id:
          description: Id assigned to a particular organization
          title: Organization Id
          type: string
        sampling_mode:
          allOf:
          - $ref: '#/components/schemas/TopicListSamplingModes'
          default: FUZZY
          description: Sampling mode used
        session_id:
          description: Session id associated with visitor
          title: Session Id
          type: string
        suggested_question_types:
          anyOf:
          - items: {}
            type: array
          - type: 'null'
          description: Suggested question types.
          title: Suggested Question Types
        topic_names:
          default: []
          description: Name of the topics
          items:
            type: string
          title: Topic Names
          type: array
        use_sample_contents:
          default: false
          description: Whether to use sampled contents
          title: Use Sample Contents
          type: boolean
        visitor_id:
          description: visitor's id
          title: Visitor Id
          type: string
      required:
      - visitor_id
      - session_id
      - organization_id
      - content_pool_id
      title: TopicListRequest
      type: object
    TopicListResponse:
      properties:
        data:
          title: Data
          type: object
        message:
          title: Message
          type: string
        status:
          title: Status
          type: string
      required:
      - status
      - message
      - data
      title: TopicListResponse
      type: object
    TopicListSamplingModes:
      enum:
      - RANDOM
      - SEMANTIC
      - FUZZY
      title: TopicListSamplingModes
      type: string
    TopicRequest:
      properties:
        content_pool_id:
          description: Id of the contentpool from which we want fetch recommendations
          title: Content Pool Id
          type: string
        context_uuid:
          anyOf:
          - type: string
          - type: 'null'
          description: Id of context from which majority of LLM configs are fetched
          title: Context Uuid
        conversation_id:
          description: Id assigned to each query asked in a particular session
          title: Conversation Id
          type: string
        current_page_view:
          anyOf:
          - type: object
          - type: 'null'
          description: Current page information, in chatfactory context, it will be
            matched document to the current/latest query.
          title: Current Page View
        document_engagement_threshold:
          anyOf:
          - type: number
          - type: 'null'
          description: Engagement threshold is used to filter out documents from session
            which giving recommendations.
          title: Document Engagement Threshold
        ip2location:
          anyOf:
          - type: object
          - type: 'null'
          description: Location
          title: Ip2Location
        organization_id:
          description: Id assigned to a particular organization
          title: Organization Id
          type: string
        session:
          anyOf:
          - type: object
          - type: 'null'
          description: Session information
          title: Session
        session_id:
          description: Session id associated with visitor
          title: Session Id
          type: string
        sixsense:
          anyOf:
          - type: object
          - type: 'null'
          description: Additional meta information of the user (Naics code, siccodes,location
            etc)
          title: Sixsense
        suggested_question_types:
          anyOf:
          - items: {}
            type: array
          - type: 'null'
          description: Suggested question types.
          title: Suggested Question Types
        topics_recom_apis:
          anyOf:
          - items: {}
            type: array
          - type: 'null'
          description: topics_recom_apis
          title: Topics Recom Apis
        visitor_id:
          description: visitor's id
          title: Visitor Id
          type: string
        visitor_org_info:
          anyOf:
          - type: object
          - type: 'null'
          description: Information related to organization from  which user belongs
            to.
          title: Visitor Org Info
        webcontext_id:
          anyOf:
          - type: string
          - type: 'null'
          description: ''
          title: Webcontext Id
      required:
      - visitor_id
      - session_id
      - organization_id
      - content_pool_id
      - conversation_id
      title: TopicRequest
      type: object
    TopicResponse:
      properties:
        data:
          title: Data
          type: object
        message:
          title: Message
          type: string
        status:
          title: Status
          type: string
      required:
      - status
      - message
      - data
      title: TopicResponse
      type: object
    UpdateEngagementRequest:
      properties:
        context_uuid:
          anyOf:
          - type: string
          - type: 'null'
          description: Id of context from which majority of LLM configs are fetched
          title: Context Uuid
        conversation_id:
          description: Id assigned to each query asked in a particular session
          title: Conversation Id
          type: string
        organization_id:
          description: Id assigned to a particular organization
          title: Organization Id
          type: string
        session_id:
          description: Session id associated with visitor
          title: Session Id
          type: string
        state:
          anyOf:
          - type: string
          - type: 'null'
          description: State of a response can be changed from neutral to LIKED or
            DISLIKED which will update the default engagmenet score value.
          title: State
        visitor_id:
          description: visitor's id
          title: Visitor Id
          type: string
      required:
      - organization_id
      - visitor_id
      - session_id
      - conversation_id
      title: UpdateEngagementRequest
      type: object
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
      type: object
info:
  title: '"chatfactory-backend"'
  version: 0.1.0
openapi: 3.1.0
paths:
  /api/v2/cf-backend/chat:
    post:
      description: 'This is the V2 endpoint for chat.


        This function leverages the ChatRequestHandler class which matches the chat
        that the user sends to the documents

        presented in the content pool and then answer based on the best matching document.


        The generate chat result or stream chat result function calls save chat function
        which will return output generated

        by ChatGPT for the chat user sends and the URL of the document that is matched


        The API expects the following parameters in the request payload:


        organization_id: str

        content_pool_id: str

        conversation_id: str

        visitor_id: str

        session_id: str

        user_role: str

        query: Optional[str]

        webcontext_id: Optional[str]

        source_type: Optional[str]

        k: Optional[int]

        columns: Optional[List[str]]

        session: Optional[Dict]

        current_page_view: Optional[Dict]

        visitor_org_info: Optional[Dict]

        ip2location: Optional[Dict]

        query_source: Optional[str]

        stream: Optional[bool] = True

        resume_session: Optional[bool]

        embedding_fields: Optional[List[str]]


        :param request: The payload object that it will accept

        :param response: The response object that it will generate

        :return:'
      operationId: chat_api_api_v2_cf_backend_chat_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Chat Api
      tags:
      - Apis for Chatfactory-Backend
  /api/v2/cf-backend/internals/get-llm-output:
    post:
      operationId: get_llm_resp_api_v2_cf_backend_internals_get_llm_output_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatLLMOutput'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Get Llm Resp
      tags:
      - Apis for Chatfactory-Backend
  /api/v2/cf-backend/microsite:
    post:
      description: "This returns one of the hardcoded microsites from the MVD playbook\
        \ and also returns the bookmarked URLs from\nthe chat window along with this\
        \ API also returns a Title and Summary to be displayed in the Microsite based\
        \ on the\nconversation with the USER.\n\nThis API expects the following parameters\
        \ in the payload.\n\nvisitor_id: str\nsession_id: str\norganization_id: str\n\
        content_pool_id: str\n\ncurrent_page_view: Optional[Dict]\nsession: Optional[Dict]\n\
        \nwebcontext_id: Optional[str]\nk: Optional[int] = 5\nvisitor_org_info: Optional[Dict]\n\
        ip2location: Optional[Dict]\nresume_session: Optional[bool]\n\nliked_ids:\
        \ Optional[List]\n\ndocument_engagement_threshold: Optional[float] = settings.DOCUMENT_ENGAGEMENT_THRESHOLD\n\
        \n@validator('liked_ids', always=True)\ndef set_liked_ids(cls, liked_ids:\
        \ Optional[List]):\n    if liked_ids is None:\n        return []\n    else:\n\
        \        return liked_ids\n\n@validator('current_page_view', always=True)\n\
        def set_current_page_view(cls, current_page_view: Dict):\n    return current_page_view\
        \ or {}\n\n@validator('session', always=True)\ndef set_session(cls, session:\
        \ Dict):\n    return session or {}\n\n@validator('ip2location', always=True)\n\
        def set_ip2location(cls, ip2location: Dict):\n    return ip2location or {}\n\
        \n@validator('resume_session', always=True)\ndef set_resume_session(cls, resume_session:\
        \ bool):\n    return resume_session or False\n\n:param request: the request\
        \ payload that the API gets\n:param response: the response json format that\
        \ the API returns\n:return:"
      operationId: microsite_api_api_v2_cf_backend_microsite_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MicrositeRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MicrositeResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Microsite Api
      tags:
      - Apis for Chatfactory-Backend
  /api/v2/cf-backend/question_text_search:
    post:
      description: "_summary_\n\nArgs:\n    request (TextSearchRequest): TextSearchRequest\n\
        \    response (Response): Response"
      operationId: question_text_search_api_v2_cf_backend_question_text_search_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TextSearchRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Question Text Search
      tags:
      - Apis for Chatfactory-Backend
  /api/v2/cf-backend/regenerate:
    post:
      description: 'This is the V2 endpoint for regenerating responses.


        This function leverages the ChatRegenerateHandler class which pulls out responses
        and matched documents from the

        collection and then regenerate it based on the requested regeneration_type.


        The generate chat result or stream chat result function will return output
        generated by ChatGPT for the regeneration

        request.


        :param request: The payload object that it will accept

        :param response: The response object that it will generate

        :return:'
      operationId: regenerate_api_api_v2_cf_backend_regenerate_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegenerationRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Regenerate Api
      tags:
      - Apis for Chatfactory-Backend
  /api/v2/cf-backend/topic_list:
    post:
      operationId: topiclist_api_api_v2_cf_backend_topic_list_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TopicListRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopicListResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Topiclist Api
      tags:
      - Apis for Chatfactory-Backend
  /api/v2/cf-backend/topics:
    post:
      description: 'This API returns suggested questions/queries/topics to the front-end
        for ChatFactory.


        The API expects the following parameters in the payload:


        visitor_id: str

        session_id: str

        user_role: str

        organization_id: str

        content_pool_id: str

        conversation_id: Optional[str]


        :param request: the request payload parameter this API expects

        :param response: the response format for this API

        :return:'
      operationId: topic_api_api_v2_cf_backend_topics_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TopicRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopicResponse'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Topic Api
      tags:
      - Apis for Chatfactory-Backend
  /api/v2/cf-backend/update_engagement:
    post:
      description: 'Update engagement score based when user update state or interactive_actions


        The API expects the following parameters in the request payload:


        conversation_id: str

        state:bool

        interactive_actions: str


        :param request: The payload object that it will accept

        :param response: The response object that it will generate

        :return:'
      operationId: update_engagement_api_api_v2_cf_backend_update_engagement_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEngagementRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Update Engagement Api
      tags:
      - Apis for Chatfactory-Backend
