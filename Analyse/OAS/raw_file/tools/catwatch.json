{
  "openapi": "3.0.1",
  "info": {
    "title": "Api Documentation",
    "description": "Api Documentation",
    "termsOfService": "urn:tos",
    "contact": {},
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0"
    },
    "version": "1.0"
  },
  "servers": [
    {
      "url": "http://localhost:30000/"
    }
  ],
  "tags": [
    {
      "name": "projects-api",
      "description": "the projects API"
    },
    {
      "name": "admin-controller",
      "description": "Admin Controller"
    },
    {
      "name": "contributors-api",
      "description": "the contributors API"
    },
    {
      "name": "statistics-api",
      "description": "the statistics API"
    },
    {
      "name": "languages-api",
      "description": "the languages API"
    },
    {
      "name": "fetch-controller",
      "description": "Fetch Controller"
    },
    {
      "name": "config-controller",
      "description": "Config Controller"
    },
    {
      "name": "health-mvc-endpoint",
      "description": "Health Mvc Endpoint"
    },
    {
      "name": "basic-error-controller",
      "description": "Basic Error Controller"
    }
  ],
  "paths": {
    "/config": {
      "get": {
        "tags": [
          "config-controller"
        ],
        "summary": "config",
        "operationId": "configUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Not Found",
            "content": {}
          }
        }
      }
    },
    "/config/scoring.project": {
      "post": {
        "tags": [
          "admin-controller"
        ],
        "summary": "configScoringProjects",
        "operationId": "configScoringProjectsUsingPOST",
        "parameters": [
          {
            "name": "X-Organizations",
            "in": "header",
            "description": "X-Organizations",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "scoringProject",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Not Found",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "scoringProject"
      }
    },
    "/contributors": {
      "get": {
        "tags": [
          "contributors-api"
        ],
        "summary": "Contributor",
        "description": "The Contributors endpoint returns all information like name, url, commits count, \nprojects count of all the Contributors for the selected filter. \n",
        "operationId": "contributorsGetUsingGET",
        "parameters": [
          {
            "name": "organizations",
            "in": "query",
            "description": "List of github.com organizations to scan(comma seperated)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items to retrieve. Default is 5.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset the list of returned results by this amount. Default is zero.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "Date from which to start fetching records from database(default = current_date)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "Date till which records will be fetched from database(default = current_date)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "parameter by which result should be sorted. '-' means descending order (default is count of commit)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "query paramater for search query (this will be contributor names prefix)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error",
            "content": {}
          },
          "200": {
            "description": "An array of Contributors of selected Github organization",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Contributor"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Not Found",
            "content": {}
          }
        }
      }
    },
    "/delete": {
      "get": {
        "tags": [
          "admin-controller"
        ],
        "summary": "deleteAll",
        "operationId": "deleteAllUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Not Found",
            "content": {}
          }
        }
      }
    },
    "/error": {
      "get": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "errorHtml",
        "operationId": "errorHtmlUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/ModelAndView"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Not Found",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "errorHtml",
        "operationId": "errorHtmlUsingPUT",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/ModelAndView"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Not Found",
            "content": {}
          }
        }
      },
      "post": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "errorHtml",
        "operationId": "errorHtmlUsingPOST",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/ModelAndView"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Not Found",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "errorHtml",
        "operationId": "errorHtmlUsingDELETE",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/ModelAndView"
                }
              }
            }
          },
          "204": {
            "description": "No Content",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          }
        }
      },
      "options": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "errorHtml",
        "operationId": "errorHtmlUsingOPTIONS",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/ModelAndView"
                }
              }
            }
          },
          "204": {
            "description": "No Content",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          }
        }
      },
      "head": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "errorHtml",
        "operationId": "errorHtmlUsingHEAD",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/ModelAndView"
                }
              }
            }
          },
          "204": {
            "description": "No Content",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          }
        }
      },
      "patch": {
        "tags": [
          "basic-error-controller"
        ],
        "summary": "errorHtml",
        "operationId": "errorHtmlUsingPATCH",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/ModelAndView"
                }
              }
            }
          },
          "204": {
            "description": "No Content",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          }
        }
      }
    },
    "/export": {
      "get": {
        "tags": [
          "admin-controller"
        ],
        "summary": "exportJson",
        "operationId": "exportJsonUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatabaseDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Not Found",
            "content": {}
          }
        }
      }
    },
    "/fetch": {
      "get": {
        "tags": [
          "fetch-controller"
        ],
        "summary": "fetch",
        "operationId": "fetchUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Not Found",
            "content": {}
          }
        }
      }
    },
    "/health": {
      "get": {
        "tags": [
          "health-mvc-endpoint"
        ],
        "summary": "invoke",
        "operationId": "invokeUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Not Found",
            "content": {}
          }
        }
      }
    },
    "/health.json": {
      "get": {
        "tags": [
          "health-mvc-endpoint"
        ],
        "summary": "invoke",
        "operationId": "invokeUsingGET_1",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Not Found",
            "content": {}
          }
        }
      }
    },
    "/import": {
      "post": {
        "tags": [
          "admin-controller"
        ],
        "summary": "importJson",
        "operationId": "importJsonUsingPOST",
        "requestBody": {
          "description": "dto",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DatabaseDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Not Found",
            "content": {}
          }
        },
        "x-codegen-request-body-name": "dto"
      }
    },
    "/init": {
      "get": {
        "tags": [
          "admin-controller"
        ],
        "summary": "init",
        "operationId": "initUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Not Found",
            "content": {}
          }
        }
      }
    },
    "/languages": {
      "get": {
        "tags": [
          "languages-api"
        ],
        "summary": "Project programming language",
        "description": "The languages endpoint returns information about the languages used for projects by selected Github Organizations order by the number of projects using the programming language.",
        "operationId": "languagesGetUsingGET",
        "parameters": [
          {
            "name": "organizations",
            "in": "query",
            "description": "List of github.com organizations to scan(comma seperated)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items to retrieve. Default is 5.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset the list of returned results by this amount. Default is zero.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "query paramater for search query (this can be language name prefix)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error",
            "content": {}
          },
          "200": {
            "description": "An array of programming language used and count of projects using it.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Language"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Not Found",
            "content": {}
          }
        }
      }
    },
    "/projects": {
      "get": {
        "tags": [
          "projects-api"
        ],
        "summary": "Project",
        "description": "The Projects endpoint returns all information like name,description, url, stars count, commits count, forks count, contributors count, score, languages used, last pushed of all the projects for the selected filter.",
        "operationId": "projectsGetUsingGET",
        "parameters": [
          {
            "name": "organizations",
            "in": "query",
            "description": "List of github.com organizations to scan(comma seperated)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items to retrieve. Default is 5.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset the list of returned results by this amount. Default is zero.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "Date from which to start fetching records from database(default = current_date)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "Date till which records will be fetched from database(default = current_date)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "parameter by which result should be sorted. '-' means descending order (count of star,count of commit, count of forks, count of contributors, score). Default is descending order of score.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "query paramater for search query (this will be project names prefix)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "query paramater for filtering by primary programming language",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error",
            "content": {}
          },
          "200": {
            "description": "An array of Projects of selected Github organization",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Project"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Not Found",
            "content": {}
          }
        }
      }
    },
    "/statistics": {
      "get": {
        "tags": [
          "statistics-api"
        ],
        "summary": "General Statistics of list of Github.com Organizations",
        "description": "The Statistics endpoint returns snapshot of statistics over a given period of time of the organization \nGithub account. Statistics contains information of the count of all private projects,  public projects,              members, teams, contributors, stars, forks, size, programming languages, tags of the list of Github.com              Organizations.\n",
        "operationId": "statisticsGetUsingGET",
        "parameters": [
          {
            "name": "organizations",
            "in": "query",
            "description": "List of github.com organizations to scan(comma seperated)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "Date from which to start fetching statistics records from database(default = current date)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "Date till which statistics records will be fetched from database(default = current date)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error",
            "content": {}
          },
          "200": {
            "description": "An array of Statistics over selected period of time.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Statistics"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Not Found",
            "content": {}
          }
        }
      }
    },
    "/statistics/contributors": {
      "get": {
        "tags": [
          "statistics-api"
        ],
        "summary": "statisticsContributorGet",
        "operationId": "statisticsContributorGetUsingGET",
        "parameters": [
          {
            "name": "organizations",
            "in": "query",
            "description": "List of github.com organizations to scan(comma seperated)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "Date from which to start fetching statistics records from database(default = current date)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "Date till which statistics records will be fetched from database(default = current date)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContributorStats"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Not Found",
            "content": {}
          }
        }
      }
    },
    "/statistics/languages": {
      "get": {
        "tags": [
          "statistics-api"
        ],
        "summary": "statisticsLanguagesGet",
        "operationId": "statisticsLanguagesGetUsingGET",
        "parameters": [
          {
            "name": "organizations",
            "in": "query",
            "description": "List of github.com organizations to scan(comma seperated)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "Date from which to start fetching statistics records from database(default = current date)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "Date till which statistics records will be fetched from database(default = current date)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LanguageStats"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Not Found",
            "content": {}
          }
        }
      }
    },
    "/statistics/projects": {
      "get": {
        "tags": [
          "statistics-api"
        ],
        "summary": "statisticsProjectGet",
        "operationId": "statisticsProjectGetUsingGET",
        "parameters": [
          {
            "name": "organizations",
            "in": "query",
            "description": "List of github.com organizations to scan(comma seperated)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "Date from which to start fetching statistics records from database(default = current date)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "Date till which statistics records will be fetched from database(default = current date)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectStats"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden",
            "content": {}
          },
          "404": {
            "description": "Not Found",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Contributor": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "the GitHub User ID of the Contributor. Part of the primary key. See official GitHub REST API guide.",
            "format": "int64"
          },
          "key": {
            "$ref": "#/components/schemas/ContributorKey"
          },
          "loginId": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "description": "Name of contributor"
          },
          "organizationId": {
            "type": "integer",
            "description": "the GitHub ID of the organization. Part of the primary key. See official GitHub REST API guide.",
            "format": "int64"
          },
          "organizationName": {
            "type": "string",
            "description": "Organization of the Contributor."
          },
          "organizationalCommitsCount": {
            "type": "integer",
            "description": "Count of organizational commits.",
            "format": "int32"
          },
          "organizationalProjectsCount": {
            "type": "integer",
            "description": "Count of organization projects of contributor.",
            "format": "int32"
          },
          "personalCommitsCount": {
            "type": "integer",
            "description": "Count of personal commits.",
            "format": "int32"
          },
          "personalProjectsCount": {
            "type": "integer",
            "description": "Count of personal projects of contributor.",
            "format": "int32"
          },
          "snapshotDate": {
            "type": "string",
            "description": "Contributor snapshot date. Part of the primary key.",
            "format": "date-time"
          },
          "url": {
            "type": "string",
            "description": "URL of contributor"
          }
        },
        "description": "A contributor is a (GitHub) user that may have contributed to projects. Equals to a GitHub acocunt. See https://developer.github.com/v3/users/#get-a-single-user"
      },
      "ContributorKey": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "organizationId": {
            "type": "integer",
            "format": "int64"
          },
          "snapshotDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ContributorStats": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "organization_commit_counts": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "organization_name": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "organization_project_counts": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "personal_commit_counts": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "personal_project_counts": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "snapshot_dates": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "url": {
            "type": "string"
          }
        }
      },
      "DatabaseDto": {
        "type": "object",
        "properties": {
          "contributors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Contributor"
            }
          },
          "projects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Project"
            }
          },
          "statistics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Statistics"
            }
          }
        }
      },
      "Language": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the programming language used."
          },
          "percentage": {
            "type": "integer",
            "description": "Usage percentage of programming language.",
            "format": "int32"
          },
          "projectsCount": {
            "type": "integer",
            "description": "Count of projects using it.",
            "format": "int32"
          }
        },
        "description": "A programming language as it is used in source code of GitHub repositories. Compare with https://developer.github.com/v3/repos/#list-languages"
      },
      "LanguageStats": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "project_counts": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "snapshot_dates": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          }
        }
      },
      "ModelAndView": {
        "type": "object",
        "properties": {
          "empty": {
            "type": "boolean"
          },
          "model": {
            "type": "object",
            "properties": {}
          },
          "modelMap": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "properties": {}
            }
          },
          "reference": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "enum": [
              "100",
              "101",
              "102",
              "103",
              "200",
              "201",
              "202",
              "203",
              "204",
              "205",
              "206",
              "207",
              "208",
              "226",
              "300",
              "301",
              "302",
              "303",
              "304",
              "305",
              "307",
              "308",
              "400",
              "401",
              "402",
              "403",
              "404",
              "405",
              "406",
              "407",
              "408",
              "409",
              "410",
              "411",
              "412",
              "413",
              "414",
              "415",
              "416",
              "417",
              "418",
              "419",
              "420",
              "421",
              "422",
              "423",
              "424",
              "426",
              "428",
              "429",
              "431",
              "451",
              "500",
              "501",
              "502",
              "503",
              "504",
              "505",
              "506",
              "507",
              "508",
              "509",
              "510",
              "511"
            ]
          },
          "view": {
            "$ref": "#/components/schemas/View"
          },
          "viewName": {
            "type": "string"
          }
        }
      },
      "Project": {
        "type": "object",
        "properties": {
          "commitsCount": {
            "type": "integer",
            "description": "Count of commits for the project.",
            "format": "int32"
          },
          "contributorsCount": {
            "type": "integer",
            "description": "Count of contributors for project.",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "description": "Description of project"
          },
          "externalContributorsCount": {
            "type": "integer",
            "description": "Count of external contributors for project.",
            "format": "int32"
          },
          "forksCount": {
            "type": "integer",
            "description": "Count of forks of project.",
            "format": "int32"
          },
          "gitHubProjectId": {
            "type": "integer",
            "description": "the GitHub ID of the repository. Part of the primary key. See official GitHub REST API guide.",
            "format": "int64"
          },
          "image": {
            "type": "string",
            "description": "Image url of project"
          },
          "languageList": {
            "type": "array",
            "description": "List of programming languages of project",
            "items": {
              "type": "string"
            }
          },
          "lastPushed": {
            "type": "string",
            "description": "Last pushed data of project."
          },
          "maintainers": {
            "type": "array",
            "description": "List of maintainers of project",
            "items": {
              "type": "string"
            }
          },
          "name": {
            "type": "string",
            "description": "Name of project"
          },
          "organizationName": {
            "type": "string",
            "description": "Organization of the Project."
          },
          "primaryLanguage": {
            "type": "string",
            "description": "Primary programming language of project"
          },
          "score": {
            "type": "integer",
            "description": "Score of project.",
            "format": "int32"
          },
          "snapshotDate": {
            "type": "string",
            "description": "Project snapshot date. Part of the primary key.",
            "format": "date-time"
          },
          "starsCount": {
            "type": "integer",
            "description": "Count of stars for the project.",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "description": "Title of project"
          },
          "url": {
            "type": "string",
            "description": "URL of project"
          }
        },
        "description": "Represents a GitHub repository. See https://developer.github.com/v3/repos/"
      },
      "ProjectStats": {
        "type": "object",
        "properties": {
          "commit_counts": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "contributors_counts": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "description": {
            "type": "string"
          },
          "fork_counts": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "name": {
            "type": "string"
          },
          "organization_name": {
            "type": "string"
          },
          "primary_language": {
            "type": "string"
          },
          "scores": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "snapshot_dates": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "url": {
            "type": "string"
          }
        }
      },
      "Statistics": {
        "type": "object",
        "properties": {
          "allContributorsCount": {
            "type": "integer",
            "description": "Count of contributors.",
            "format": "int32"
          },
          "allForksCount": {
            "type": "integer",
            "description": "Count of forks.",
            "format": "int32"
          },
          "allSizeCount": {
            "type": "integer",
            "description": "Count of projects.",
            "format": "int32"
          },
          "allStarsCount": {
            "type": "integer",
            "description": "Count of stars.",
            "format": "int32"
          },
          "externalContributorsCount": {
            "type": "integer",
            "description": "Count of external contributors.",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "description": "the GitHub ID of the organization. Part of the primary key. See official GitHub REST API guide.",
            "format": "int64"
          },
          "key": {
            "$ref": "#/components/schemas/StatisticsKey"
          },
          "membersCount": {
            "type": "integer",
            "description": "Count of memebers.",
            "format": "int32"
          },
          "organizationName": {
            "type": "string",
            "description": "Organization name."
          },
          "privateProjectCount": {
            "type": "integer",
            "description": "Count of private projects.",
            "format": "int32"
          },
          "programLanguagesCount": {
            "type": "integer",
            "description": "Count of programming languages used.",
            "format": "int32"
          },
          "publicProjectCount": {
            "type": "integer",
            "description": "Count of public projects.",
            "format": "int32"
          },
          "snapshotDate": {
            "type": "string",
            "description": "Statistics snapshot date. Part of the primary key.",
            "format": "date-time"
          },
          "tagsCount": {
            "type": "integer",
            "description": "Count of tags.",
            "format": "int32"
          },
          "teamsCount": {
            "type": "integer",
            "description": "Count of teams.",
            "format": "int32"
          }
        },
        "description": "Represents the statistics of a GitHub organization. See https://developer.github.com/v3/orgs/"
      },
      "StatisticsKey": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "snapshotDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "View": {
        "type": "object",
        "properties": {
          "contentType": {
            "type": "string"
          }
        }
      }
    }
  },
  "x-original-swagger-version": "2.0"
}